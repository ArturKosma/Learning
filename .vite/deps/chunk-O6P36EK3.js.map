{
  "version": 3,
  "sources": ["../../../animFlex/graph/node_modules/@babel/runtime/helpers/typeof.js", "../../../animFlex/graph/node_modules/@babel/runtime/helpers/regeneratorRuntime.js", "../../../animFlex/graph/node_modules/@babel/runtime/regenerator/index.js", "../../../animFlex/graph/node_modules/rete/src/scope.ts", "../../../animFlex/graph/node_modules/rete/src/editor.ts", "../../../animFlex/graph/node_modules/rete/src/utils.ts", "../../../animFlex/graph/node_modules/rete/src/presets/classic.ts"],
  "sourcesContent": ["function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return r;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    r = {},\n    e = Object.prototype,\n    n = e.hasOwnProperty,\n    o = \"function\" == typeof Symbol ? Symbol : {},\n    i = o.iterator || \"@@iterator\",\n    a = o.asyncIterator || \"@@asyncIterator\",\n    u = o.toStringTag || \"@@toStringTag\";\n  function c(t, r, e, n) {\n    return Object.defineProperty(t, r, {\n      value: e,\n      enumerable: !n,\n      configurable: !n,\n      writable: !n\n    });\n  }\n  try {\n    c({}, \"\");\n  } catch (t) {\n    c = function c(t, r, e) {\n      return t[r] = e;\n    };\n  }\n  function h(r, e, n, o) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype);\n    return c(a, \"_invoke\", function (r, e, n) {\n      var o = 1;\n      return function (i, a) {\n        if (3 === o) throw Error(\"Generator is already running\");\n        if (4 === o) {\n          if (\"throw\" === i) throw a;\n          return {\n            value: t,\n            done: !0\n          };\n        }\n        for (n.method = i, n.arg = a;;) {\n          var u = n.delegate;\n          if (u) {\n            var c = d(u, n);\n            if (c) {\n              if (c === f) continue;\n              return c;\n            }\n          }\n          if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n            if (1 === o) throw o = 4, n.arg;\n            n.dispatchException(n.arg);\n          } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n          o = 3;\n          var h = s(r, e, n);\n          if (\"normal\" === h.type) {\n            if (o = n.done ? 4 : 2, h.arg === f) continue;\n            return {\n              value: h.arg,\n              done: n.done\n            };\n          }\n          \"throw\" === h.type && (o = 4, n.method = \"throw\", n.arg = h.arg);\n        }\n      };\n    }(r, n, new Context(o || [])), !0), a;\n  }\n  function s(t, r, e) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(r, e)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  r.wrap = h;\n  var f = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var l = {};\n  c(l, i, function () {\n    return this;\n  });\n  var p = Object.getPrototypeOf,\n    y = p && p(p(x([])));\n  y && y !== e && n.call(y, i) && (l = y);\n  var v = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(l);\n  function g(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (r) {\n      c(t, r, function (t) {\n        return this._invoke(r, t);\n      });\n    });\n  }\n  function AsyncIterator(t, r) {\n    function e(o, i, a, u) {\n      var c = s(t[o], t, i);\n      if (\"throw\" !== c.type) {\n        var h = c.arg,\n          f = h.value;\n        return f && \"object\" == _typeof(f) && n.call(f, \"__await\") ? r.resolve(f.__await).then(function (t) {\n          e(\"next\", t, a, u);\n        }, function (t) {\n          e(\"throw\", t, a, u);\n        }) : r.resolve(f).then(function (t) {\n          h.value = t, a(h);\n        }, function (t) {\n          return e(\"throw\", t, a, u);\n        });\n      }\n      u(c.arg);\n    }\n    var o;\n    c(this, \"_invoke\", function (t, n) {\n      function i() {\n        return new r(function (r, o) {\n          e(t, n, r, o);\n        });\n      }\n      return o = o ? o.then(i, i) : i();\n    }, !0);\n  }\n  function d(r, e) {\n    var n = e.method,\n      o = r.i[n];\n    if (o === t) return e.delegate = null, \"throw\" === n && r.i[\"return\"] && (e.method = \"return\", e.arg = t, d(r, e), \"throw\" === e.method) || \"return\" !== n && (e.method = \"throw\", e.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), f;\n    var i = s(o, r.i, e.arg);\n    if (\"throw\" === i.type) return e.method = \"throw\", e.arg = i.arg, e.delegate = null, f;\n    var a = i.arg;\n    return a ? a.done ? (e[r.r] = a.value, e.next = r.n, \"return\" !== e.method && (e.method = \"next\", e.arg = t), e.delegate = null, f) : a : (e.method = \"throw\", e.arg = new TypeError(\"iterator result is not an object\"), e.delegate = null, f);\n  }\n  function w(t) {\n    this.tryEntries.push(t);\n  }\n  function m(r) {\n    var e = r[4] || {};\n    e.type = \"normal\", e.arg = t, r[4] = e;\n  }\n  function Context(t) {\n    this.tryEntries = [[-1]], t.forEach(w, this), this.reset(!0);\n  }\n  function x(r) {\n    if (null != r) {\n      var e = r[i];\n      if (e) return e.call(r);\n      if (\"function\" == typeof r.next) return r;\n      if (!isNaN(r.length)) {\n        var o = -1,\n          a = function e() {\n            for (; ++o < r.length;) if (n.call(r, o)) return e.value = r[o], e.done = !1, e;\n            return e.value = t, e.done = !0, e;\n          };\n        return a.next = a;\n      }\n    }\n    throw new TypeError(_typeof(r) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, c(v, \"constructor\", GeneratorFunctionPrototype), c(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = c(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), r.isGeneratorFunction = function (t) {\n    var r = \"function\" == typeof t && t.constructor;\n    return !!r && (r === GeneratorFunction || \"GeneratorFunction\" === (r.displayName || r.name));\n  }, r.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, c(t, u, \"GeneratorFunction\")), t.prototype = Object.create(v), t;\n  }, r.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, g(AsyncIterator.prototype), c(AsyncIterator.prototype, a, function () {\n    return this;\n  }), r.AsyncIterator = AsyncIterator, r.async = function (t, e, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(h(t, e, n, o), i);\n    return r.isGeneratorFunction(e) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, g(v), c(v, u, \"Generator\"), c(v, i, function () {\n    return this;\n  }), c(v, \"toString\", function () {\n    return \"[object Generator]\";\n  }), r.keys = function (t) {\n    var r = Object(t),\n      e = [];\n    for (var n in r) e.unshift(n);\n    return function t() {\n      for (; e.length;) if ((n = e.pop()) in r) return t.value = n, t.done = !1, t;\n      return t.done = !0, t;\n    };\n  }, r.values = x, Context.prototype = {\n    constructor: Context,\n    reset: function reset(r) {\n      if (this.prev = this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(m), !r) for (var e in this) \"t\" === e.charAt(0) && n.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0][4];\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(r) {\n      if (this.done) throw r;\n      var e = this;\n      function n(t) {\n        a.type = \"throw\", a.arg = r, e.next = t;\n      }\n      for (var o = e.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i[4],\n          u = this.prev,\n          c = i[1],\n          h = i[2];\n        if (-1 === i[0]) return n(\"end\"), !1;\n        if (!c && !h) throw Error(\"try statement without catch or finally\");\n        if (null != i[0] && i[0] <= u) {\n          if (u < c) return this.method = \"next\", this.arg = t, n(c), !0;\n          if (u < h) return n(h), !1;\n        }\n      }\n    },\n    abrupt: function abrupt(t, r) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var n = this.tryEntries[e];\n        if (n[0] > -1 && n[0] <= this.prev && this.prev < n[2]) {\n          var o = n;\n          break;\n        }\n      }\n      o && (\"break\" === t || \"continue\" === t) && o[0] <= r && r <= o[2] && (o = null);\n      var i = o ? o[4] : {};\n      return i.type = t, i.arg = r, o ? (this.method = \"next\", this.next = o[2], f) : this.complete(i);\n    },\n    complete: function complete(t, r) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && r && (this.next = r), f;\n    },\n    finish: function finish(t) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var e = this.tryEntries[r];\n        if (e[2] === t) return this.complete(e[4], e[3]), m(e), f;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var e = this.tryEntries[r];\n        if (e[0] === t) {\n          var n = e[4];\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            m(e);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(r, e, n) {\n      return this.delegate = {\n        i: x(r),\n        r: e,\n        n: n\n      }, \"next\" === this.method && (this.arg = t), f;\n    }\n  }, r;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/naming-convention */\nimport {\n  AcceptPartialUnion, CanAssignSignal, GetAssignmentReferences, GetNonAssignableElements, Tail\n} from './utility-types'\n\nexport type { CanAssignSignal }\n\n/**\n * A middleware type that can modify the data\n * @typeParam T - The data type\n * @param data - The data to be modified\n * @returns The modified data or undefined\n * @example (data) => data + 1\n * @example (data) => undefined // will stop the execution\n * @internal\n */\nexport type Pipe<T> = (data: T) => Promise<undefined | T> | undefined | T\n\nexport type CanAssignEach<D extends any[], F extends any[]> = D extends [infer H1, ...infer Tail1]\n  ? (\n    F extends [infer H2, ...infer Tail2] ?\n      [CanAssignSignal<H1, H2>, ...CanAssignEach<Tail1, Tail2>]\n      : []\n  ) : []\n\nexport type ScopeAsParameter<S extends Scope<any, any[]>, Current extends any[]> = (CanAssignEach<[S['__scope']['produces'], ...S['__scope']['parents']], Current>[number] extends true\n  ? S\n  : 'Argument Scope does not provide expected signals'\n)\n\n/**\n * Validate the Scope signals and replace the parameter type with an error message if they are not assignable\n * @internal\n */\nexport type NestedScope<S extends Scope<any, any[]>, Current extends any[]> = (CanAssignEach<Current, S['__scope']['parents']>[number] extends true\n  ? S\n  : 'Parent signals do not satisfy the connected scope. Please use `.debug($ => $) for detailed assignment error'\n)\n\n/**\n * Provides 'debug' method to check the detailed assignment error message\n * @example .debug($ => $)\n * @internal\n */\nexport function useHelper<S extends Scope<any, any[]>, Signals>() {\n  type T1 = S['__scope']['parents'][number]\n  return {\n    debug<T extends GetNonAssignableElements<T1, Signals>>(_f: (p: GetAssignmentReferences<T, Signals>) => T) {\n      /* placeholder */\n    }\n  }\n}\n\n/**\n * A signal is a middleware chain that can be used to modify the data\n * @typeParam T - The data type\n * @internal\n */\nexport class Signal<T> {\n  pipes: Pipe<T>[] = []\n\n  addPipe(pipe: Pipe<T>) {\n    this.pipes.push(pipe)\n  }\n\n  async emit<Context extends T>(context: Context): Promise<Context | undefined> {\n    let current: Context | undefined = context\n\n    for (const pipe of this.pipes) {\n      current = await pipe(current) as Context\n\n      if (typeof current === 'undefined') return\n    }\n    return current\n  }\n}\n\ntype Type<T> = (new(...args: any[]) => T) | (abstract new (...args: any[]) => T)\n\n/**\n * Base class for all plugins and the core. Provides a signals mechanism to modify the data\n */\nexport class Scope<Produces, Parents extends unknown[] = []> {\n  signal = new Signal<AcceptPartialUnion<Produces | Parents[number]>>()\n  parent?: any // Parents['length'] extends 0 ? undefined : Scope<Parents[0], Tail<Parents>>\n  __scope!: {\n    produces: Produces\n    parents: Parents\n  }\n\n  constructor(public name: string) { }\n\n  addPipe(middleware: Pipe<Produces | Parents[number]>) {\n    this.signal.addPipe(middleware)\n  }\n\n  use<S extends Scope<any, any[]>>(scope: NestedScope<S, [Produces, ...Parents]>) {\n    if (!(scope instanceof Scope)) throw new Error('cannot use non-Scope instance')\n\n    scope.setParent(this)\n    this.addPipe(context => {\n      return scope.signal.emit(context)\n    })\n\n    return useHelper<S, Produces | Parents[number]>()\n  }\n\n  setParent(scope: Scope<Parents[0], Tail<Parents>>) {\n    this.parent = scope\n  }\n\n  emit<C extends Produces>(context: C): Promise<Extract<Produces, C> | undefined> {\n    return this.signal.emit(context) as Promise<Extract<Produces, C>>\n  }\n\n  hasParent(): boolean {\n    return Boolean(this.parent)\n  }\n\n  parentScope<T extends Parents[0], P extends Tail<Parents>>(): Scope<T, P>\n  parentScope<T>(type: Type<T>): T\n  parentScope<T>(type?: Type<T>): T {\n    if (!this.parent) throw new Error('cannot find parent')\n    if (type && this.parent instanceof type) return this.parent\n    if (type) throw new Error('actual parent is not instance of type')\n    return this.parent\n  }\n}\n", "import { Scope } from './scope'\nimport { BaseSchemes } from './types'\n\n/**\n * Signal types produced by NodeEditor instance\n * @typeParam Scheme - The scheme type\n * @priority 10\n * @group Primary\n */\nexport type Root<Scheme extends BaseSchemes> =\n  | { type: 'nodecreate', data: Scheme['Node'] }\n  | { type: 'nodecreated', data: Scheme['Node'] }\n  | { type: 'noderemove', data: Scheme['Node'] }\n  | { type: 'noderemoved', data: Scheme['Node'] }\n  | { type: 'connectioncreate', data: Scheme['Connection'] }\n  | { type: 'connectioncreated', data: Scheme['Connection'] }\n  | { type: 'connectionremove', data: Scheme['Connection'] }\n  | { type: 'connectionremoved', data: Scheme['Connection'] }\n  | { type: 'clear' }\n  | { type: 'clearcancelled' }\n  | { type: 'cleared' }\n\n/**\n * The NodeEditor class is the entry class. It is used to create and manage nodes and connections.\n * @typeParam Scheme - The scheme type\n * @priority 7\n * @group Primary\n */\nexport class NodeEditor<Scheme extends BaseSchemes> extends Scope<Root<Scheme>> {\n  private nodes: Scheme['Node'][] = []\n  private connections: Scheme['Connection'][] = []\n\n  constructor() {\n    super('NodeEditor')\n  }\n\n  /**\n   * Get a node by id\n   * @param id - The node id\n   * @returns The node or undefined\n   */\n  public getNode(id: Scheme['Node']['id']) {\n    return this.nodes.find(node => node.id === id)\n  }\n\n  /**\n   * Get all nodes\n   * @returns Copy of array with nodes\n   */\n  public getNodes() {\n    return this.nodes.slice()\n  }\n\n  /**\n   * Get all connections\n   * @returns Copy of array with onnections\n   */\n  public getConnections() {\n    return this.connections.slice()\n  }\n\n  /**\n   * Get a connection by id\n   * @param id - The connection id\n   * @returns The connection or undefined\n   */\n  public getConnection(id: Scheme['Connection']['id']) {\n    return this.connections.find(connection => connection.id === id)\n  }\n\n  /**\n   * Add a node\n   * @param data - The node data\n   * @returns Whether the node was added\n   * @throws If the node has already been added\n   * @emits nodecreate\n   * @emits nodecreated\n   */\n  async addNode(data: Scheme['Node']) {\n    if (this.getNode(data.id)) throw new Error('node has already been added')\n\n    if (!await this.emit({ type: 'nodecreate', data })) return false\n\n    this.nodes.push(data)\n\n    await this.emit({ type: 'nodecreated', data })\n    return true\n  }\n\n  /**\n   * Add a connection\n   * @param data - The connection data\n   * @returns Whether the connection was added\n   * @throws If the connection has already been added\n   * @emits connectioncreate\n   * @emits connectioncreated\n   */\n  async addConnection(data: Scheme['Connection']) {\n    if (this.getConnection(data.id)) throw new Error('connection has already been added')\n\n    if (!await this.emit({ type: 'connectioncreate', data })) return false\n\n    this.connections.push(data)\n\n    await this.emit({ type: 'connectioncreated', data })\n    return true\n  }\n\n  /**\n   * Remove a node\n   * @param id - The node id\n   * @returns Whether the node was removed\n   * @throws If the node cannot be found\n   * @emits noderemove\n   * @emits noderemoved\n   */\n  async removeNode(id: Scheme['Node']['id']) {\n    const index = this.nodes.findIndex(n => n.id === id)\n    const node = this.nodes[index]\n\n    if (index < 0) throw new Error('cannot find node')\n\n    if (!await this.emit({ type: 'noderemove', data: node })) return false\n\n    this.nodes.splice(index, 1)\n\n    await this.emit({ type: 'noderemoved', data: node })\n    return true\n  }\n\n  /**\n   * Remove a connection\n   * @param id - The connection id\n   * @returns Whether the connection was removed\n   * @throws If the connection cannot be found\n   * @emits connectionremove\n   * @emits connectionremoved\n   */\n  async removeConnection(id: Scheme['Connection']['id']) {\n    const index = this.connections.findIndex(n => n.id === id)\n    const connection = this.connections[index]\n\n    if (index < 0) throw new Error('cannot find connection')\n\n    if (!await this.emit({ type: 'connectionremove', data: connection })) return false\n\n    this.connections.splice(index, 1)\n\n    await this.emit({ type: 'connectionremoved', data: connection })\n    return true\n  }\n\n  /**\n   * Clear all nodes and connections\n   * @returns Whether the editor was cleared\n   * @emits clear\n   * @emits clearcancelled\n   * @emits cleared\n   */\n  async clear() {\n    if (!await this.emit({ type: 'clear' })) {\n      await this.emit({ type: 'clearcancelled' })\n      return false\n    }\n\n    for (const connection of this.connections.slice()) await this.removeConnection(connection.id)\n    for (const node of this.nodes.slice()) await this.removeNode(node.id)\n\n    await this.emit({ type: 'cleared' })\n    return true\n  }\n}\n", "const crypto = globalThis.crypto as (typeof globalThis.crypto | typeof import('node:crypto'))\n\n/**\n * @returns A unique id\n */\nexport function getUID(): string {\n  if ('randomBytes' in crypto) {\n    return crypto.randomBytes(8).toString('hex')\n  }\n\n  const bytes = crypto.getRandomValues(new Uint8Array(8))\n  const array = Array.from(bytes)\n  const hexPairs = array.map(b => b.toString(16).padStart(2, '0'))\n\n  return hexPairs.join('')\n}\n", "/**\n * Contains classes for classic scheme such as Node, Input, Output, Control, Socket, Connection\n * @module\n * @group Primary\n */\n\nimport { ConnectionBase, NodeBase } from '../types'\nimport { getUID } from '../utils'\n\ntype PortId = string\n\n/**\n * The socket class\n * @priority 7\n */\nexport class Socket {\n  /**\n   * @constructor\n   * @param name Name of the socket\n   */\n  constructor(public name: string) {\n\n  }\n}\n\n/**\n * General port class\n */\nexport class Port<S extends Socket> {\n  /**\n   * Port id, unique string generated by `getUID` function\n   */\n  id: PortId\n  /**\n   * Port index, used for sorting ports. Default is `0`\n   */\n  index?: number\n\n  /**\n   * @constructor\n   * @param socket Socket instance\n   * @param label Label of the port\n   * @param multipleConnections Whether the output port can have multiple connections\n   */\n  constructor(public socket: S, public label?: string, public multipleConnections?: boolean) {\n    this.id = getUID()\n  }\n}\n\n/**\n * The input port class\n * @priority 6\n */\nexport class Input<S extends Socket> extends Port<S> {\n  /**\n   * Control instance\n   */\n  control: Control | null = null\n  /**\n   * Whether the control is visible. Can be managed dynamically by extensions. Default is `true`\n   */\n  showControl = true\n\n  /**\n   * @constructor\n   * @param socket Socket instance\n   * @param label Label of the input port\n   * @param multipleConnections Whether the output port can have multiple connections. Default is `false`\n   */\n  constructor(public socket: S, public label?: string, public multipleConnections?: boolean) {\n    super(socket, label, multipleConnections)\n  }\n\n  /**\n   * Add control to the input port\n   * @param control Control instance\n   */\n  addControl(control: Control) {\n    if (this.control) throw new Error('control already added for this input')\n    this.control = control\n  }\n\n  /**\n   * Remove control from the input port\n   */\n  removeControl() {\n    this.control = null\n  }\n}\n\n/**\n * The output port class\n * @priority 5\n */\nexport class Output<S extends Socket> extends Port<S> {\n  /**\n   * @constructor\n   * @param socket Socket instance\n   * @param label Label of the output port\n   * @param multipleConnections Whether the output port can have multiple connections. Default is `true`\n   */\n  constructor(socket: S, label?: string, multipleConnections?: boolean) {\n    super(socket, label, multipleConnections !== false)\n  }\n}\n\n/**\n * General control class\n * @priority 5\n */\nexport class Control {\n  /**\n   * Control id, unique string generated by `getUID` function\n   */\n  id: string\n  /**\n   * Control index, used for sorting controls. Default is `0`\n   */\n  index?: number\n\n  constructor() {\n    this.id = getUID()\n  }\n}\n\n/**\n * Input control options\n */\ntype InputControlOptions<N> = {\n  /** Whether the control is readonly. Default is `false` */\n  readonly?: boolean\n  /** Initial value of the control */\n  initial?: N\n  /** Callback function that is called when the control value changes */\n  change?: (value: N) => void\n}\n/**\n * The input control class\n * @example new InputControl('text', { readonly: true, initial: 'hello' })\n */\nexport class InputControl<T extends 'text' | 'number', N = T extends 'text' ? string : number> extends Control {\n  value?: N\n  readonly: boolean\n\n  /**\n   * @constructor\n   * @param type Type of the control: `text` or `number`\n   * @param options Control options\n   */\n  constructor(public type: T, public options?: InputControlOptions<N>) {\n    super()\n    this.id = getUID()\n    this.readonly = options?.readonly ?? false\n\n    if (typeof options?.initial !== 'undefined') this.value = options.initial\n  }\n\n  /**\n   * Set control value\n   * @param value Value to set\n   */\n  setValue(value?: N) {\n    this.value = value\n    if (this.options?.change) this.options.change(value!)\n  }\n}\n\n/**\n * The node class\n * @priority 10\n * @example new Node('math')\n */\nexport class Node<\n  Inputs extends { [key in string]?: Socket } = { [key in string]?: Socket },\n  Outputs extends { [key in string]?: Socket } = { [key in string]?: Socket },\n  Controls extends { [key in string]?: Control } = { [key in string]?: Control }\n> implements NodeBase {\n  /**\n   * Node id, unique string generated by `getUID` function\n   */\n  id: NodeBase['id']\n  /**\n   * Node inputs\n   */\n  inputs: { [key in keyof Inputs]?: Input<Exclude<Inputs[key], undefined>> } = {}\n  /**\n   * Node outputs\n   */\n  outputs: { [key in keyof Outputs]?: Output<Exclude<Outputs[key], undefined>> } = {}\n  /**\n   * Node controls\n   */\n  controls: Controls = {} as Controls\n  /**\n   * Whether the node is selected. Default is `false`\n   */\n  selected?: boolean\n\n  constructor(public label: string) {\n    this.id = getUID()\n  }\n\n  hasInput<K extends keyof Inputs>(key: K) {\n    return Object.prototype.hasOwnProperty.call(this.inputs, key)\n  }\n\n  addInput<K extends keyof Inputs>(key: K, input: Input<Exclude<Inputs[K], undefined>>) {\n    if (this.hasInput(key)) throw new Error(`input with key '${String(key)}' already added`)\n\n    Object.defineProperty(this.inputs, key, { value: input, enumerable: true, configurable: true })\n  }\n\n  removeInput(key: keyof Inputs) {\n    delete this.inputs[key]\n  }\n\n  hasOutput<K extends keyof Outputs>(key: K) {\n    return Object.prototype.hasOwnProperty.call(this.outputs, key)\n  }\n\n  addOutput<K extends keyof Outputs>(key: K, output: Output<Exclude<Outputs[K], undefined>>) {\n    if (this.hasOutput(key)) throw new Error(`output with key '${String(key)}' already added`)\n\n    Object.defineProperty(this.outputs, key, { value: output, enumerable: true, configurable: true })\n  }\n\n  removeOutput(key: keyof Outputs) {\n    delete this.outputs[key]\n  }\n\n  hasControl<K extends keyof Controls>(key: K) {\n    return Object.prototype.hasOwnProperty.call(this.controls, key)\n  }\n\n  addControl<K extends keyof Controls>(key: K, control: Controls[K]) {\n    if (this.hasControl(key)) throw new Error(`control with key '${String(key)}' already added`)\n\n    Object.defineProperty(this.controls, key, { value: control, enumerable: true, configurable: true })\n  }\n\n  removeControl(key: keyof Controls) {\n    delete this.controls[key]\n  }\n}\n\n/**\n * The connection class\n * @priority 9\n */\nexport class Connection<\n  Source extends Node,\n  Target extends Node\n> implements ConnectionBase {\n  /**\n   * Connection id, unique string generated by `getUID` function\n   */\n  id: ConnectionBase['id']\n  /**\n   * Source node id\n   */\n  source: NodeBase['id']\n  /**\n   * Target node id\n   */\n  target: NodeBase['id']\n\n  /**\n   * @constructor\n   * @param source Source node instance\n   * @param sourceOutput Source node output key\n   * @param target Target node instance\n   * @param targetInput Target node input key\n   */\n  constructor(\n    source: Source,\n    public sourceOutput: keyof Source['outputs'],\n    target: Target,\n    public targetInput: keyof Target['inputs']\n  ) {\n    if (!source.outputs[sourceOutput as string]) {\n      throw new Error(`source node doesn't have output with a key ${String(sourceOutput)}`)\n    }\n    if (!target.inputs[targetInput as string]) {\n      throw new Error(`target node doesn't have input with a key ${String(targetInput)}`)\n    }\n\n    this.id = getUID()\n    this.source = source.id\n    this.target = target.id\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;AAAA;AAAA;AAAA,aAAS,QAAQ,GAAG;AAClB;AAEA,aAAO,OAAO,UAAU,UAAU,cAAc,OAAO,UAAU,YAAY,OAAO,OAAO,WAAW,SAAUA,IAAG;AACjH,eAAO,OAAOA;AAAA,MAChB,IAAI,SAAUA,IAAG;AACf,eAAOA,MAAK,cAAc,OAAO,UAAUA,GAAE,gBAAgB,UAAUA,OAAM,OAAO,YAAY,WAAW,OAAOA;AAAA,MACpH,GAAG,OAAO,QAAQ,aAAa,MAAM,OAAO,QAAQ,SAAS,IAAI,OAAO,SAAS,QAAQ,CAAC;AAAA,IAC5F;AACA,WAAO,UAAU,SAAS,OAAO,QAAQ,aAAa,MAAM,OAAO,QAAQ,SAAS,IAAI,OAAO;AAAA;AAAA;;;ACT/F;AAAA;AAAA,QAAI,UAAU,iBAAuB,SAAS;AAC9C,aAASC,uBAAsB;AAC7B;AACA,aAAO,UAAUA,uBAAsB,SAASA,uBAAsB;AACpE,eAAO;AAAA,MACT,GAAG,OAAO,QAAQ,aAAa,MAAM,OAAO,QAAQ,SAAS,IAAI,OAAO;AACxE,UAAI,GACF,IAAI,CAAC,GACL,IAAI,OAAO,WACX,IAAI,EAAE,gBACN,IAAI,cAAc,OAAO,SAAS,SAAS,CAAC,GAC5C,IAAI,EAAE,YAAY,cAClB,IAAI,EAAE,iBAAiB,mBACvB,IAAI,EAAE,eAAe;AACvB,eAAS,EAAEC,IAAGC,IAAGC,IAAGC,IAAG;AACrB,eAAO,OAAO,eAAeH,IAAGC,IAAG;AAAA,UACjC,OAAOC;AAAA,UACP,YAAY,CAACC;AAAA,UACb,cAAc,CAACA;AAAA,UACf,UAAU,CAACA;AAAA,QACb,CAAC;AAAA,MACH;AACA,UAAI;AACF,UAAE,CAAC,GAAG,EAAE;AAAA,MACV,SAASH,IAAG;AACV,YAAI,SAASI,GAAEJ,IAAGC,IAAGC,IAAG;AACtB,iBAAOF,GAAEC,EAAC,IAAIC;AAAA,QAChB;AAAA,MACF;AACA,eAAS,EAAED,IAAGC,IAAGC,IAAGE,IAAG;AACrB,YAAIC,KAAIJ,MAAKA,GAAE,qBAAqB,YAAYA,KAAI,WAClDK,KAAI,OAAO,OAAOD,GAAE,SAAS;AAC/B,eAAO,EAAEC,IAAG,WAAW,yBAAUN,IAAGC,IAAGC,IAAG;AACxC,cAAIE,KAAI;AACR,iBAAO,SAAUC,IAAGC,IAAG;AACrB,gBAAI,MAAMF,GAAG,OAAM,MAAM,8BAA8B;AACvD,gBAAI,MAAMA,IAAG;AACX,kBAAI,YAAYC,GAAG,OAAMC;AACzB,qBAAO;AAAA,gBACL,OAAO;AAAA,gBACP,MAAM;AAAA,cACR;AAAA,YACF;AACA,iBAAKJ,GAAE,SAASG,IAAGH,GAAE,MAAMI,QAAK;AAC9B,kBAAIC,KAAIL,GAAE;AACV,kBAAIK,IAAG;AACL,oBAAIJ,KAAI,EAAEI,IAAGL,EAAC;AACd,oBAAIC,IAAG;AACL,sBAAIA,OAAM,EAAG;AACb,yBAAOA;AAAA,gBACT;AAAA,cACF;AACA,kBAAI,WAAWD,GAAE,OAAQ,CAAAA,GAAE,OAAOA,GAAE,QAAQA,GAAE;AAAA,uBAAa,YAAYA,GAAE,QAAQ;AAC/E,oBAAI,MAAME,GAAG,OAAMA,KAAI,GAAGF,GAAE;AAC5B,gBAAAA,GAAE,kBAAkBA,GAAE,GAAG;AAAA,cAC3B,MAAO,cAAaA,GAAE,UAAUA,GAAE,OAAO,UAAUA,GAAE,GAAG;AACxD,cAAAE,KAAI;AACJ,kBAAII,KAAI,EAAER,IAAGC,IAAGC,EAAC;AACjB,kBAAI,aAAaM,GAAE,MAAM;AACvB,oBAAIJ,KAAIF,GAAE,OAAO,IAAI,GAAGM,GAAE,QAAQ,EAAG;AACrC,uBAAO;AAAA,kBACL,OAAOA,GAAE;AAAA,kBACT,MAAMN,GAAE;AAAA,gBACV;AAAA,cACF;AACA,0BAAYM,GAAE,SAASJ,KAAI,GAAGF,GAAE,SAAS,SAASA,GAAE,MAAMM,GAAE;AAAA,YAC9D;AAAA,UACF;AAAA,QACF,EAAER,IAAGE,IAAG,IAAI,QAAQE,MAAK,CAAC,CAAC,CAAC,GAAG,IAAE,GAAGE;AAAA,MACtC;AACA,eAAS,EAAEP,IAAGC,IAAGC,IAAG;AAClB,YAAI;AACF,iBAAO;AAAA,YACL,MAAM;AAAA,YACN,KAAKF,GAAE,KAAKC,IAAGC,EAAC;AAAA,UAClB;AAAA,QACF,SAASF,IAAG;AACV,iBAAO;AAAA,YACL,MAAM;AAAA,YACN,KAAKA;AAAA,UACP;AAAA,QACF;AAAA,MACF;AACA,QAAE,OAAO;AACT,UAAI,IAAI,CAAC;AACT,eAAS,YAAY;AAAA,MAAC;AACtB,eAAS,oBAAoB;AAAA,MAAC;AAC9B,eAAS,6BAA6B;AAAA,MAAC;AACvC,UAAI,IAAI,CAAC;AACT,QAAE,GAAG,GAAG,WAAY;AAClB,eAAO;AAAA,MACT,CAAC;AACD,UAAI,IAAI,OAAO,gBACb,IAAI,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AACrB,WAAK,MAAM,KAAK,EAAE,KAAK,GAAG,CAAC,MAAM,IAAI;AACrC,UAAI,IAAI,2BAA2B,YAAY,UAAU,YAAY,OAAO,OAAO,CAAC;AACpF,eAAS,EAAEA,IAAG;AACZ,SAAC,QAAQ,SAAS,QAAQ,EAAE,QAAQ,SAAUC,IAAG;AAC/C,YAAED,IAAGC,IAAG,SAAUD,IAAG;AACnB,mBAAO,KAAK,QAAQC,IAAGD,EAAC;AAAA,UAC1B,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AACA,eAAS,cAAcA,IAAGC,IAAG;AAC3B,iBAASC,GAAEG,IAAGC,IAAGC,IAAGC,IAAG;AACrB,cAAIJ,KAAI,EAAEJ,GAAEK,EAAC,GAAGL,IAAGM,EAAC;AACpB,cAAI,YAAYF,GAAE,MAAM;AACtB,gBAAIK,KAAIL,GAAE,KACRM,KAAID,GAAE;AACR,mBAAOC,MAAK,YAAY,QAAQA,EAAC,KAAK,EAAE,KAAKA,IAAG,SAAS,IAAIT,GAAE,QAAQS,GAAE,OAAO,EAAE,KAAK,SAAUV,IAAG;AAClG,cAAAE,GAAE,QAAQF,IAAGO,IAAGC,EAAC;AAAA,YACnB,GAAG,SAAUR,IAAG;AACd,cAAAE,GAAE,SAASF,IAAGO,IAAGC,EAAC;AAAA,YACpB,CAAC,IAAIP,GAAE,QAAQS,EAAC,EAAE,KAAK,SAAUV,IAAG;AAClC,cAAAS,GAAE,QAAQT,IAAGO,GAAEE,EAAC;AAAA,YAClB,GAAG,SAAUT,IAAG;AACd,qBAAOE,GAAE,SAASF,IAAGO,IAAGC,EAAC;AAAA,YAC3B,CAAC;AAAA,UACH;AACA,UAAAA,GAAEJ,GAAE,GAAG;AAAA,QACT;AACA,YAAIC;AACJ,UAAE,MAAM,WAAW,SAAUL,IAAGG,IAAG;AACjC,mBAASG,KAAI;AACX,mBAAO,IAAIL,GAAE,SAAUA,IAAGI,IAAG;AAC3B,cAAAH,GAAEF,IAAGG,IAAGF,IAAGI,EAAC;AAAA,YACd,CAAC;AAAA,UACH;AACA,iBAAOA,KAAIA,KAAIA,GAAE,KAAKC,IAAGA,EAAC,IAAIA,GAAE;AAAA,QAClC,GAAG,IAAE;AAAA,MACP;AACA,eAAS,EAAEL,IAAGC,IAAG;AACf,YAAIC,KAAID,GAAE,QACRG,KAAIJ,GAAE,EAAEE,EAAC;AACX,YAAIE,OAAM,EAAG,QAAOH,GAAE,WAAW,MAAM,YAAYC,MAAKF,GAAE,EAAE,QAAQ,MAAMC,GAAE,SAAS,UAAUA,GAAE,MAAM,GAAG,EAAED,IAAGC,EAAC,GAAG,YAAYA,GAAE,WAAW,aAAaC,OAAMD,GAAE,SAAS,SAASA,GAAE,MAAM,IAAI,UAAU,sCAAsCC,KAAI,UAAU,IAAI;AACjQ,YAAIG,KAAI,EAAED,IAAGJ,GAAE,GAAGC,GAAE,GAAG;AACvB,YAAI,YAAYI,GAAE,KAAM,QAAOJ,GAAE,SAAS,SAASA,GAAE,MAAMI,GAAE,KAAKJ,GAAE,WAAW,MAAM;AACrF,YAAIK,KAAID,GAAE;AACV,eAAOC,KAAIA,GAAE,QAAQL,GAAED,GAAE,CAAC,IAAIM,GAAE,OAAOL,GAAE,OAAOD,GAAE,GAAG,aAAaC,GAAE,WAAWA,GAAE,SAAS,QAAQA,GAAE,MAAM,IAAIA,GAAE,WAAW,MAAM,KAAKK,MAAKL,GAAE,SAAS,SAASA,GAAE,MAAM,IAAI,UAAU,kCAAkC,GAAGA,GAAE,WAAW,MAAM;AAAA,MAC/O;AACA,eAAS,EAAEF,IAAG;AACZ,aAAK,WAAW,KAAKA,EAAC;AAAA,MACxB;AACA,eAAS,EAAEC,IAAG;AACZ,YAAIC,KAAID,GAAE,CAAC,KAAK,CAAC;AACjB,QAAAC,GAAE,OAAO,UAAUA,GAAE,MAAM,GAAGD,GAAE,CAAC,IAAIC;AAAA,MACvC;AACA,eAAS,QAAQF,IAAG;AAClB,aAAK,aAAa,CAAC,CAAC,EAAE,CAAC,GAAGA,GAAE,QAAQ,GAAG,IAAI,GAAG,KAAK,MAAM,IAAE;AAAA,MAC7D;AACA,eAAS,EAAEC,IAAG;AACZ,YAAI,QAAQA,IAAG;AACb,cAAIC,KAAID,GAAE,CAAC;AACX,cAAIC,GAAG,QAAOA,GAAE,KAAKD,EAAC;AACtB,cAAI,cAAc,OAAOA,GAAE,KAAM,QAAOA;AACxC,cAAI,CAAC,MAAMA,GAAE,MAAM,GAAG;AACpB,gBAAII,KAAI,IACNE,KAAI,SAASL,KAAI;AACf,qBAAO,EAAEG,KAAIJ,GAAE,SAAS,KAAI,EAAE,KAAKA,IAAGI,EAAC,EAAG,QAAOH,GAAE,QAAQD,GAAEI,EAAC,GAAGH,GAAE,OAAO,OAAIA;AAC9E,qBAAOA,GAAE,QAAQ,GAAGA,GAAE,OAAO,MAAIA;AAAA,YACnC;AACF,mBAAOK,GAAE,OAAOA;AAAA,UAClB;AAAA,QACF;AACA,cAAM,IAAI,UAAU,QAAQN,EAAC,IAAI,kBAAkB;AAAA,MACrD;AACA,aAAO,kBAAkB,YAAY,4BAA4B,EAAE,GAAG,eAAe,0BAA0B,GAAG,EAAE,4BAA4B,eAAe,iBAAiB,GAAG,kBAAkB,cAAc,EAAE,4BAA4B,GAAG,mBAAmB,GAAG,EAAE,sBAAsB,SAAUD,IAAG;AAC7S,YAAIC,KAAI,cAAc,OAAOD,MAAKA,GAAE;AACpC,eAAO,CAAC,CAACC,OAAMA,OAAM,qBAAqB,yBAAyBA,GAAE,eAAeA,GAAE;AAAA,MACxF,GAAG,EAAE,OAAO,SAAUD,IAAG;AACvB,eAAO,OAAO,iBAAiB,OAAO,eAAeA,IAAG,0BAA0B,KAAKA,GAAE,YAAY,4BAA4B,EAAEA,IAAG,GAAG,mBAAmB,IAAIA,GAAE,YAAY,OAAO,OAAO,CAAC,GAAGA;AAAA,MAClM,GAAG,EAAE,QAAQ,SAAUA,IAAG;AACxB,eAAO;AAAA,UACL,SAASA;AAAA,QACX;AAAA,MACF,GAAG,EAAE,cAAc,SAAS,GAAG,EAAE,cAAc,WAAW,GAAG,WAAY;AACvE,eAAO;AAAA,MACT,CAAC,GAAG,EAAE,gBAAgB,eAAe,EAAE,QAAQ,SAAUA,IAAGE,IAAGC,IAAGE,IAAGC,IAAG;AACtE,mBAAWA,OAAMA,KAAI;AACrB,YAAIC,KAAI,IAAI,cAAc,EAAEP,IAAGE,IAAGC,IAAGE,EAAC,GAAGC,EAAC;AAC1C,eAAO,EAAE,oBAAoBJ,EAAC,IAAIK,KAAIA,GAAE,KAAK,EAAE,KAAK,SAAUP,IAAG;AAC/D,iBAAOA,GAAE,OAAOA,GAAE,QAAQO,GAAE,KAAK;AAAA,QACnC,CAAC;AAAA,MACH,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,WAAW,GAAG,EAAE,GAAG,GAAG,WAAY;AACjD,eAAO;AAAA,MACT,CAAC,GAAG,EAAE,GAAG,YAAY,WAAY;AAC/B,eAAO;AAAA,MACT,CAAC,GAAG,EAAE,OAAO,SAAUP,IAAG;AACxB,YAAIC,KAAI,OAAOD,EAAC,GACdE,KAAI,CAAC;AACP,iBAASC,MAAKF,GAAG,CAAAC,GAAE,QAAQC,EAAC;AAC5B,eAAO,SAASH,KAAI;AAClB,iBAAOE,GAAE,SAAS,MAAKC,KAAID,GAAE,IAAI,MAAMD,GAAG,QAAOD,GAAE,QAAQG,IAAGH,GAAE,OAAO,OAAIA;AAC3E,iBAAOA,GAAE,OAAO,MAAIA;AAAA,QACtB;AAAA,MACF,GAAG,EAAE,SAAS,GAAG,QAAQ,YAAY;AAAA,QACnC,aAAa;AAAA,QACb,OAAO,SAAS,MAAMC,IAAG;AACvB,cAAI,KAAK,OAAO,KAAK,OAAO,GAAG,KAAK,OAAO,KAAK,QAAQ,GAAG,KAAK,OAAO,OAAI,KAAK,WAAW,MAAM,KAAK,SAAS,QAAQ,KAAK,MAAM,GAAG,KAAK,WAAW,QAAQ,CAAC,GAAG,CAACA,GAAG,UAASC,MAAK,KAAM,SAAQA,GAAE,OAAO,CAAC,KAAK,EAAE,KAAK,MAAMA,EAAC,KAAK,CAAC,MAAM,CAACA,GAAE,MAAM,CAAC,CAAC,MAAM,KAAKA,EAAC,IAAI;AAAA,QACvQ;AAAA,QACA,MAAM,SAAS,OAAO;AACpB,eAAK,OAAO;AACZ,cAAIF,KAAI,KAAK,WAAW,CAAC,EAAE,CAAC;AAC5B,cAAI,YAAYA,GAAE,KAAM,OAAMA,GAAE;AAChC,iBAAO,KAAK;AAAA,QACd;AAAA,QACA,mBAAmB,SAAS,kBAAkBC,IAAG;AAC/C,cAAI,KAAK,KAAM,OAAMA;AACrB,cAAIC,KAAI;AACR,mBAASC,GAAEH,IAAG;AACZ,YAAAO,GAAE,OAAO,SAASA,GAAE,MAAMN,IAAGC,GAAE,OAAOF;AAAA,UACxC;AACA,mBAASK,KAAIH,GAAE,WAAW,SAAS,GAAGG,MAAK,GAAG,EAAEA,IAAG;AACjD,gBAAIC,KAAI,KAAK,WAAWD,EAAC,GACvBE,KAAID,GAAE,CAAC,GACPE,KAAI,KAAK,MACTJ,KAAIE,GAAE,CAAC,GACPG,KAAIH,GAAE,CAAC;AACT,gBAAI,OAAOA,GAAE,CAAC,EAAG,QAAOH,GAAE,KAAK,GAAG;AAClC,gBAAI,CAACC,MAAK,CAACK,GAAG,OAAM,MAAM,wCAAwC;AAClE,gBAAI,QAAQH,GAAE,CAAC,KAAKA,GAAE,CAAC,KAAKE,IAAG;AAC7B,kBAAIA,KAAIJ,GAAG,QAAO,KAAK,SAAS,QAAQ,KAAK,MAAM,GAAGD,GAAEC,EAAC,GAAG;AAC5D,kBAAII,KAAIC,GAAG,QAAON,GAAEM,EAAC,GAAG;AAAA,YAC1B;AAAA,UACF;AAAA,QACF;AAAA,QACA,QAAQ,SAAS,OAAOT,IAAGC,IAAG;AAC5B,mBAASC,KAAI,KAAK,WAAW,SAAS,GAAGA,MAAK,GAAG,EAAEA,IAAG;AACpD,gBAAIC,KAAI,KAAK,WAAWD,EAAC;AACzB,gBAAIC,GAAE,CAAC,IAAI,MAAMA,GAAE,CAAC,KAAK,KAAK,QAAQ,KAAK,OAAOA,GAAE,CAAC,GAAG;AACtD,kBAAIE,KAAIF;AACR;AAAA,YACF;AAAA,UACF;AACA,UAAAE,OAAM,YAAYL,MAAK,eAAeA,OAAMK,GAAE,CAAC,KAAKJ,MAAKA,MAAKI,GAAE,CAAC,MAAMA,KAAI;AAC3E,cAAIC,KAAID,KAAIA,GAAE,CAAC,IAAI,CAAC;AACpB,iBAAOC,GAAE,OAAON,IAAGM,GAAE,MAAML,IAAGI,MAAK,KAAK,SAAS,QAAQ,KAAK,OAAOA,GAAE,CAAC,GAAG,KAAK,KAAK,SAASC,EAAC;AAAA,QACjG;AAAA,QACA,UAAU,SAAS,SAASN,IAAGC,IAAG;AAChC,cAAI,YAAYD,GAAE,KAAM,OAAMA,GAAE;AAChC,iBAAO,YAAYA,GAAE,QAAQ,eAAeA,GAAE,OAAO,KAAK,OAAOA,GAAE,MAAM,aAAaA,GAAE,QAAQ,KAAK,OAAO,KAAK,MAAMA,GAAE,KAAK,KAAK,SAAS,UAAU,KAAK,OAAO,SAAS,aAAaA,GAAE,QAAQC,OAAM,KAAK,OAAOA,KAAI;AAAA,QAC1N;AAAA,QACA,QAAQ,SAAS,OAAOD,IAAG;AACzB,mBAASC,KAAI,KAAK,WAAW,SAAS,GAAGA,MAAK,GAAG,EAAEA,IAAG;AACpD,gBAAIC,KAAI,KAAK,WAAWD,EAAC;AACzB,gBAAIC,GAAE,CAAC,MAAMF,GAAG,QAAO,KAAK,SAASE,GAAE,CAAC,GAAGA,GAAE,CAAC,CAAC,GAAG,EAAEA,EAAC,GAAG;AAAA,UAC1D;AAAA,QACF;AAAA,QACA,SAAS,SAAS,OAAOF,IAAG;AAC1B,mBAASC,KAAI,KAAK,WAAW,SAAS,GAAGA,MAAK,GAAG,EAAEA,IAAG;AACpD,gBAAIC,KAAI,KAAK,WAAWD,EAAC;AACzB,gBAAIC,GAAE,CAAC,MAAMF,IAAG;AACd,kBAAIG,KAAID,GAAE,CAAC;AACX,kBAAI,YAAYC,GAAE,MAAM;AACtB,oBAAIE,KAAIF,GAAE;AACV,kBAAED,EAAC;AAAA,cACL;AACA,qBAAOG;AAAA,YACT;AAAA,UACF;AACA,gBAAM,MAAM,uBAAuB;AAAA,QACrC;AAAA,QACA,eAAe,SAAS,cAAcJ,IAAGC,IAAGC,IAAG;AAC7C,iBAAO,KAAK,WAAW;AAAA,YACrB,GAAG,EAAEF,EAAC;AAAA,YACN,GAAGC;AAAA,YACH,GAAGC;AAAA,UACL,GAAG,WAAW,KAAK,WAAW,KAAK,MAAM,IAAI;AAAA,QAC/C;AAAA,MACF,GAAG;AAAA,IACL;AACA,WAAO,UAAUJ,sBAAqB,OAAO,QAAQ,aAAa,MAAM,OAAO,QAAQ,SAAS,IAAI,OAAO;AAAA;AAAA;;;AC/Q3G;AAAA;AAEA,QAAI,UAAU,6BAAyC;AACvD,WAAO,UAAU;AAGjB,QAAI;AACF,2BAAqB;AAAA,IACvB,SAAS,sBAAsB;AAC7B,UAAI,OAAO,eAAe,UAAU;AAClC,mBAAW,qBAAqB;AAAA,MAClC,OAAO;AACL,iBAAS,KAAK,wBAAwB,EAAE,OAAO;AAAA,MACjD;AAAA,IACF;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC+BO,SAASY,YAAkD;AAEhE,SAAO;IACLC,OAAAA,SAAAA,MAAuDC,IAAmD;IACxG;;AAGN;AAOA,IAAaC,SAAM,WAAA;AAAA,WAAAA,UAAA;AAAAC,oBAAA,MAAAD,OAAA;AAAAE,oBAAA,MAAA,SACE,CAAA,CAAE;EAAA;AAAA,SAAAC,aAAAH,SAAA,CAAA;IAAAI,KAAA;IAAAC,OAErB,SAAAC,QAAQC,MAAe;AACrB,WAAKC,MAAMC,KAAKF,IAAI;IACtB;EAAC,GAAA;IAAAH,KAAA;IAAAC,OAAA,WAAA;AAAA,UAAAK,QAAAC,kBAAAC,mBAAAA,QAAAC,KAED,SAAAC,QAA8BC,SAAgB;AAAA,YAAAC,SAAAC,WAAAC,OAAAX;AAAA,eAAAK,mBAAAA,QAAAO,KAAA,SAAAC,SAAAC,UAAA;AAAA,iBAAA,EAAA,SAAAA,SAAAC,OAAAD,SAAAE,MAAA;YAAA,KAAA;AACxCP,wBAA+BD;AAAOE,0BAAAO,6BAEvB,KAAKhB,KAAK;AAAAa,uBAAAC,OAAA;AAAAL,wBAAAQ,EAAA;YAAA,KAAA;AAAA,mBAAAP,QAAAD,UAAAS,EAAA,GAAAC,MAAA;AAAAN,yBAAAE,OAAA;AAAA;cAAA;AAAlBhB,qBAAIW,MAAAb;AAAAgB,uBAAAE,OAAA;AAAA,qBACGhB,KAAKS,OAAO;YAAC,KAAA;AAA7BA,wBAAOK,SAAAO;AAAA,kBAEH,EAAA,OAAOZ,YAAY,cAAW;AAAAK,yBAAAE,OAAA;AAAA;cAAA;AAAA,qBAAAF,SAAAQ,OAAA,QAAA;YAAA,KAAA;AAAAR,uBAAAE,OAAA;AAAA;YAAA,KAAA;AAAAF,uBAAAE,OAAA;AAAA;YAAA,KAAA;AAAAF,uBAAAC,OAAA;AAAAD,uBAAAS,KAAAT,SAAA,OAAA,EAAA,CAAA;AAAAJ,wBAAAc,EAAAV,SAAAS,EAAA;YAAA,KAAA;AAAAT,uBAAAC,OAAA;AAAAL,wBAAAe,EAAA;AAAA,qBAAAX,SAAAY,OAAA,EAAA;YAAA,KAAA;AAAA,qBAAAZ,SAAAQ,OAAA,UAE7Bb,OAAO;YAAA,KAAA;YAAA,KAAA;AAAA,qBAAAK,SAAAa,KAAA;UAAA;QAAA,GAAApB,SAAA,MAAA,CAAA,CAAA,GAAA,IAAA,IAAA,EAAA,CAAA,CAAA;OACf,CAAA;AAAA,eATKqB,KAAIC,IAAA;AAAA,eAAA1B,MAAA2B,MAAA,MAAAC,SAAA;MAAA;AAAA,aAAJH;IAAI,EAAA;EAAA,CAAA,CAAA;AAAA,EAAA;AAiBZ,IAAaI,QAAK,WAAA;AAQhB,WAAAA,OAAmBC,MAAc;AAAAvC,oBAAA,MAAAsC,MAAA;AAAArC,oBAPxB,MAAA,UAAA,IAAIF,OAAM,CAAkD;AAAA,SAOlDwC,OAAAA;EAAgB;AAAC,SAAArC,aAAAoC,QAAA,CAAA;IAAAnC,KAAA;IAAAC,OAEpC,SAAAC,QAAQmC,YAA8C;AACpD,WAAKC,OAAOpC,QAAQmC,UAAU;IAChC;EAAC,GAAA;IAAArC,KAAA;IAAAC,OAED,SAAAsC,IAAiCC,OAA+C;AAC9E,UAAI,EAAEA,iBAAiBL,QAAQ,OAAM,IAAIM,MAAM,+BAA+B;AAE9ED,YAAME,UAAU,IAAI;AACpB,WAAKxC,QAAQ,SAAAS,SAAW;AACtB,eAAO6B,MAAMF,OAAOP,KAAKpB,OAAO;MAClC,CAAC;AAED,aAAOlB,UAAS;IAClB;EAAC,GAAA;IAAAO,KAAA;IAAAC,OAED,SAAAyC,UAAUF,OAAyC;AACjD,WAAKG,SAASH;IAChB;EAAC,GAAA;IAAAxC,KAAA;IAAAC,OAED,SAAA8B,KAAyBpB,SAAuD;AAC9E,aAAO,KAAK2B,OAAOP,KAAKpB,OAAO;IACjC;EAAC,GAAA;IAAAX,KAAA;IAAAC,OAED,SAAA2C,YAAqB;AACnB,aAAOC,QAAQ,KAAKF,MAAM;IAC5B;EAAC,GAAA;IAAA3C,KAAA;IAAAC,OAID,SAAA6C,YAAeC,MAAmB;AAChC,UAAI,CAAC,KAAKJ,OAAQ,OAAM,IAAIF,MAAM,oBAAoB;AACtD,UAAIM,QAAQ,KAAKJ,kBAAkBI,KAAM,QAAO,KAAKJ;AACrD,UAAII,KAAM,OAAM,IAAIN,MAAM,uCAAuC;AACjE,aAAO,KAAKE;IACd;EAAC,CAAA,CAAA;AAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnGUK,IAAAA,aAAU,SAAAC,QAAA;AAIrB,WAAAD,cAAc;AAAA,QAAAE;AAAArD,oBAAA,MAAAmD,WAAA;AACZE,YAAAC,aAAAH,MAAAA,aAAA,CAAM,YAAY,CAAA;AAAClD,oBAAAoD,OAAA,SAJa,CAAA,CAAE;AAAApD,oBAAAoD,OAAA,eACU,CAAA,CAAE;AAAA,WAAAA;EAIhD;AAEAE,YAAAJ,aAAAC,MAAA;AAAA,SAAAlD,aAAAiD,aAAA,CAAA;IAAAhD,KAAA;IAAAC,OAKA,SAAOoD,QAAQC,IAA0B;AACvC,aAAO,KAAKC,MAAMC,KAAK,SAAAC,MAAI;AAAA,eAAIA,KAAKH,OAAOA;OAAG;IAChD;;;;;EAEA,GAAA;IAAAtD,KAAA;IAAAC,OAIA,SAAOyD,WAAW;AAChB,aAAO,KAAKH,MAAMI,MAAK;IACzB;;;;;EAEA,GAAA;IAAA3D,KAAA;IAAAC,OAIA,SAAO2D,iBAAiB;AACtB,aAAO,KAAKC,YAAYF,MAAK;IAC/B;;;;;;EAEA,GAAA;IAAA3D,KAAA;IAAAC,OAKA,SAAO6D,cAAcR,IAAgC;AACnD,aAAO,KAAKO,YAAYL,KAAK,SAAAO,YAAU;AAAA,eAAIA,WAAWT,OAAOA;OAAG;IAClE;;;;;;;;;EAEA,GAAA;IAAAtD,KAAA;IAAAC,OAAA,WAAA;AAAA,UAAA+D,WAAAzD,kBAAAC,mBAAAA,QAAAC,KAQA,SAAAC,QAAcuD,MAAoB;AAAA,eAAAzD,mBAAAA,QAAAO,KAAA,SAAAC,SAAAC,UAAA;AAAA,iBAAA,EAAA,SAAAA,SAAAC,OAAAD,SAAAE,MAAA;YAAA,KAAA;AAAA,kBAAA,CAC5B,KAAKkC,QAAQY,KAAKX,EAAE,GAAC;AAAArC,yBAAAE,OAAA;AAAA;cAAA;AAAA,oBAAQ,IAAIsB,MAAM,6BAA6B;YAAC,KAAA;AAAAxB,uBAAAE,OAAA;AAAA,qBAE9D,KAAKY,KAAK;gBAAEgB,MAAM;gBAAckB;cAAK,CAAC;YAAC,KAAA;AAAA,kBAAAhD,SAAAO,MAAA;AAAAP,yBAAAE,OAAA;AAAA;cAAA;AAAA,qBAAAF,SAAAQ,OAAA,UAAS,KAAK;YAAA,KAAA;AAEhE,mBAAK8B,MAAMlD,KAAK4D,IAAI;AAAChD,uBAAAE,OAAA;AAAA,qBAEf,KAAKY,KAAK;gBAAEgB,MAAM;gBAAekB;cAAK,CAAC;YAAC,KAAA;AAAA,qBAAAhD,SAAAQ,OAAA,UACvC,IAAI;YAAA,KAAA;YAAA,KAAA;AAAA,qBAAAR,SAAAa,KAAA;UAAA;QAAA,GAAApB,SAAA,IAAA;OACZ,CAAA;AAAA,eATKwD,QAAOlC,IAAA;AAAA,eAAAgC,SAAA/B,MAAA,MAAAC,SAAA;MAAA;AAAA,aAAPgC;IAAO,EAAA;EAWb,GAAA;IAAAlE,KAAA;IAAAC,OAAA,WAAA;AAAA,UAAAkE,iBAAA5D,kBAAAC,mBAAAA,QAAAC,KAQA,SAAA2D,SAAoBH,MAA0B;AAAA,eAAAzD,mBAAAA,QAAAO,KAAA,SAAAsD,UAAAC,WAAA;AAAA,iBAAA,EAAA,SAAAA,UAAApD,OAAAoD,UAAAnD,MAAA;YAAA,KAAA;AAAA,kBAAA,CACxC,KAAK2C,cAAcG,KAAKX,EAAE,GAAC;AAAAgB,0BAAAnD,OAAA;AAAA;cAAA;AAAA,oBAAQ,IAAIsB,MAAM,mCAAmC;YAAC,KAAA;AAAA6B,wBAAAnD,OAAA;AAAA,qBAE1E,KAAKY,KAAK;gBAAEgB,MAAM;gBAAoBkB;cAAK,CAAC;YAAC,KAAA;AAAA,kBAAAK,UAAA9C,MAAA;AAAA8C,0BAAAnD,OAAA;AAAA;cAAA;AAAA,qBAAAmD,UAAA7C,OAAA,UAAS,KAAK;YAAA,KAAA;AAEtE,mBAAKoC,YAAYxD,KAAK4D,IAAI;AAACK,wBAAAnD,OAAA;AAAA,qBAErB,KAAKY,KAAK;gBAAEgB,MAAM;gBAAqBkB;cAAK,CAAC;YAAC,KAAA;AAAA,qBAAAK,UAAA7C,OAAA,UAC7C,IAAI;YAAA,KAAA;YAAA,KAAA;AAAA,qBAAA6C,UAAAxC,KAAA;UAAA;QAAA,GAAAsC,UAAA,IAAA;OACZ,CAAA;AAAA,eATKG,cAAaC,KAAA;AAAA,eAAAL,eAAAlC,MAAA,MAAAC,SAAA;MAAA;AAAA,aAAbqC;IAAa,EAAA;EAWnB,GAAA;IAAAvE,KAAA;IAAAC,OAAA,WAAA;AAAA,UAAAwE,cAAAlE,kBAAAC,mBAAAA,QAAAC,KAQA,SAAAiE,SAAiBpB,IAAwB;AAAA,YAAAqB,OAAAlB;AAAA,eAAAjD,mBAAAA,QAAAO,KAAA,SAAA6D,UAAAC,WAAA;AAAA,iBAAA,EAAA,SAAAA,UAAA3D,OAAA2D,UAAA1D,MAAA;YAAA,KAAA;AACjCwD,sBAAQ,KAAKpB,MAAMuB,UAAU,SAAAxD,GAAC;AAAA,uBAAIA,EAAEgC,OAAOA;eAAG;AAC9CG,qBAAO,KAAKF,MAAMoB,KAAK;AAAC,kBAE1BA,EAAAA,QAAQ,IAAC;AAAAE,0BAAA1D,OAAA;AAAA;cAAA;AAAA,oBAAQ,IAAIsB,MAAM,kBAAkB;YAAC,KAAA;AAAAoC,wBAAA1D,OAAA;AAAA,qBAEvC,KAAKY,KAAK;gBAAEgB,MAAM;gBAAckB,MAAMR;cAAK,CAAC;YAAC,KAAA;AAAA,kBAAAoB,UAAArD,MAAA;AAAAqD,0BAAA1D,OAAA;AAAA;cAAA;AAAA,qBAAA0D,UAAApD,OAAA,UAAS,KAAK;YAAA,KAAA;AAEtE,mBAAK8B,MAAMwB,OAAOJ,OAAO,CAAC;AAACE,wBAAA1D,OAAA;AAAA,qBAErB,KAAKY,KAAK;gBAAEgB,MAAM;gBAAekB,MAAMR;cAAK,CAAC;YAAC,KAAA;AAAA,qBAAAoB,UAAApD,OAAA,UAC7C,IAAI;YAAA,KAAA;YAAA,KAAA;AAAA,qBAAAoD,UAAA/C,KAAA;UAAA;QAAA,GAAA4C,UAAA,IAAA;OACZ,CAAA;AAAA,eAZKM,WAAUC,KAAA;AAAA,eAAAR,YAAAxC,MAAA,MAAAC,SAAA;MAAA;AAAA,aAAV8C;IAAU,EAAA;EAchB,GAAA;IAAAhF,KAAA;IAAAC,OAAA,WAAA;AAAA,UAAAiF,oBAAA3E,kBAAAC,mBAAAA,QAAAC,KAQA,SAAA0E,SAAuB7B,IAA8B;AAAA,YAAAqB,OAAAZ;AAAA,eAAAvD,mBAAAA,QAAAO,KAAA,SAAAqE,UAAAC,WAAA;AAAA,iBAAA,EAAA,SAAAA,UAAAnE,OAAAmE,UAAAlE,MAAA;YAAA,KAAA;AAC7CwD,sBAAQ,KAAKd,YAAYiB,UAAU,SAAAxD,GAAC;AAAA,uBAAIA,EAAEgC,OAAOA;eAAG;AACpDS,2BAAa,KAAKF,YAAYc,KAAK;AAAC,kBAEtCA,EAAAA,QAAQ,IAAC;AAAAU,0BAAAlE,OAAA;AAAA;cAAA;AAAA,oBAAQ,IAAIsB,MAAM,wBAAwB;YAAC,KAAA;AAAA4C,wBAAAlE,OAAA;AAAA,qBAE7C,KAAKY,KAAK;gBAAEgB,MAAM;gBAAoBkB,MAAMF;cAAW,CAAC;YAAC,KAAA;AAAA,kBAAAsB,UAAA7D,MAAA;AAAA6D,0BAAAlE,OAAA;AAAA;cAAA;AAAA,qBAAAkE,UAAA5D,OAAA,UAAS,KAAK;YAAA,KAAA;AAElF,mBAAKoC,YAAYkB,OAAOJ,OAAO,CAAC;AAACU,wBAAAlE,OAAA;AAAA,qBAE3B,KAAKY,KAAK;gBAAEgB,MAAM;gBAAqBkB,MAAMF;cAAW,CAAC;YAAC,KAAA;AAAA,qBAAAsB,UAAA5D,OAAA,UACzD,IAAI;YAAA,KAAA;YAAA,KAAA;AAAA,qBAAA4D,UAAAvD,KAAA;UAAA;QAAA,GAAAqD,UAAA,IAAA;OACZ,CAAA;AAAA,eAZKG,iBAAgBC,KAAA;AAAA,eAAAL,kBAAAjD,MAAA,MAAAC,SAAA;MAAA;AAAA,aAAhBoD;IAAgB,EAAA;EActB,GAAA;IAAAtF,KAAA;IAAAC,OAAA,WAAA;AAAA,UAAAuF,SAAAjF,kBAAAC,mBAAAA,QAAAC,KAOA,SAAAgF,WAAA;AAAA,YAAA5E,WAAAC,OAAAiD,YAAA2B,YAAAC,QAAAlC;AAAA,eAAAjD,mBAAAA,QAAAO,KAAA,SAAA6E,UAAAC,WAAA;AAAA,iBAAA,EAAA,SAAAA,UAAA3E,OAAA2E,UAAA1E,MAAA;YAAA,KAAA;AAAA0E,wBAAA1E,OAAA;AAAA,qBACa,KAAKY,KAAK;gBAAEgB,MAAM;cAAQ,CAAC;YAAC,KAAA;AAAA,kBAAA8C,UAAArE,MAAA;AAAAqE,0BAAA1E,OAAA;AAAA;cAAA;AAAA0E,wBAAA1E,OAAA;AAAA,qBAC/B,KAAKY,KAAK;gBAAEgB,MAAM;cAAiB,CAAC;YAAC,KAAA;AAAA,qBAAA8C,UAAApE,OAAA,UACpC,KAAK;YAAA,KAAA;AAAAZ,0BAAAO,2BAGW,KAAKyC,YAAYF,MAAK,CAAE;AAAAkC,wBAAA3E,OAAA;AAAAL,wBAAAQ,EAAA;YAAA,KAAA;AAAA,mBAAAP,QAAAD,UAAAS,EAAA,GAAAC,MAAA;AAAAsE,0BAAA1E,OAAA;AAAA;cAAA;AAAtC4C,2BAAUjD,MAAAb;AAAA4F,wBAAA1E,OAAA;AAAA,qBAAoC,KAAKmE,iBAAiBvB,WAAWT,EAAE;YAAC,KAAA;AAAAuC,wBAAA1E,OAAA;AAAA;YAAA,KAAA;AAAA0E,wBAAA1E,OAAA;AAAA;YAAA,KAAA;AAAA0E,wBAAA3E,OAAA;AAAA2E,wBAAAnE,KAAAmE,UAAA,OAAA,EAAA,CAAA;AAAAhF,wBAAAc,EAAAkE,UAAAnE,EAAA;YAAA,KAAA;AAAAmE,wBAAA3E,OAAA;AAAAL,wBAAAe,EAAA;AAAA,qBAAAiE,UAAAhE,OAAA,EAAA;YAAA,KAAA;AAAA6D,2BAAAtE,2BAC1E,KAAKmC,MAAMI,MAAK,CAAE;AAAAkC,wBAAA3E,OAAA;AAAAwE,yBAAArE,EAAA;YAAA,KAAA;AAAA,mBAAAsE,SAAAD,WAAApE,EAAA,GAAAC,MAAA;AAAAsE,0BAAA1E,OAAA;AAAA;cAAA;AAA1BsC,qBAAIkC,OAAA1F;AAAA4F,wBAAA1E,OAAA;AAAA,qBAA8B,KAAK6D,WAAWvB,KAAKH,EAAE;YAAC,KAAA;AAAAuC,wBAAA1E,OAAA;AAAA;YAAA,KAAA;AAAA0E,wBAAA1E,OAAA;AAAA;YAAA,KAAA;AAAA0E,wBAAA3E,OAAA;AAAA2E,wBAAAC,KAAAD,UAAA,OAAA,EAAA,EAAA;AAAAH,yBAAA/D,EAAAkE,UAAAC,EAAA;YAAA,KAAA;AAAAD,wBAAA3E,OAAA;AAAAwE,yBAAA9D,EAAA;AAAA,qBAAAiE,UAAAhE,OAAA,EAAA;YAAA,KAAA;AAAAgE,wBAAA1E,OAAA;AAAA,qBAE/D,KAAKY,KAAK;gBAAEgB,MAAM;cAAU,CAAC;YAAC,KAAA;AAAA,qBAAA8C,UAAApE,OAAA,UAC7B,IAAI;YAAA,KAAA;YAAA,KAAA;AAAA,qBAAAoE,UAAA/D,KAAA;UAAA;QAAA,GAAA2D,UAAA,MAAA,CAAA,CAAA,GAAA,IAAA,IAAA,EAAA,GAAA,CAAA,IAAA,IAAA,IAAA,EAAA,CAAA,CAAA;OACZ,CAAA;AAAA,eAXKM,QAAK;AAAA,eAAAP,OAAAvD,MAAA,MAAAC,SAAA;MAAA;AAAA,aAAL6D;IAAK,EAAA;EAAA,CAAA,CAAA;AAAA,EAnI+C5D,KAAK;AC5BjE,IAAM6D,SAASC,WAAWD;AAKnB,SAASE,SAAiB;AAC/B,MAAI,iBAAiBF,QAAQ;AAC3B,WAAOA,OAAOG,YAAY,CAAC,EAAEC,SAAS,KAAK;EAC7C;AAEA,MAAMC,QAAQL,OAAOM,gBAAgB,IAAIC,WAAW,CAAC,CAAC;AACtD,MAAMC,QAAQC,MAAMC,KAAKL,KAAK;AAC9B,MAAMM,WAAWH,MAAMI,IAAI,SAAAC,GAAC;AAAA,WAAIA,EAAET,SAAS,EAAE,EAAEU,SAAS,GAAG,GAAG;GAAE;AAEhE,SAAOH,SAASI,KAAK,EAAE;AACzB;;;;;;;;;;;;;;ACAaC,IAAAA,SAAMjH;;;;;EAKjB,SAAAiH,QAAmB5E,MAAc;AAAAvC,oBAAA,MAAAmH,OAAA;AAAA,SAAd5E,OAAAA;EAEnB;AAAC;AAMU6E,IAAAA,OAAIlH;;;;;;;;;;;;;EAgBf,SAAAkH,MAAmBC,QAAkBC,OAAuBC,qBAA+B;AAAAvH,oBAAA,MAAAoH,KAAA;AAAA,SAAxEC,SAAAA;AAAS,SAASC,QAAAA;AAAc,SAASC,sBAAAA;AAC1D,SAAK9D,KAAK4C,OAAM;EAClB;AAAC;AAOUmB,IAAAA,QAAK,SAAAC,OAAA;AAgBhB,WAAAD,OAAmBH,QAAkBC,OAAuBC,qBAA+B;AAAA,QAAAlE;AAAArD,oBAAA,MAAAwH,MAAA;AACzFnE,YAAAC,WAAAkE,MAAAA,QAAA,CAAMH,QAAQC,OAAOC,mBAAmB,CAAA;AAhB1CtH,oBAAAoD,OAAA,WAG0B,IAAI;AAC9BpD,oBAAAoD,OAAA,eAGc,IAAI;AAAAA,UAQCgE,SAAAA;AAAShE,UAASiE,QAAAA;AAAcjE,UAASkE,sBAAAA;AAA6B,WAAAlE;EAEzF;AAEAE,YAAAiE,QAAAC,KAAA;AAAA,SAAAvH,aAAAsH,QAAA,CAAA;IAAArH,KAAA;IAAAC,OAIA,SAAAsH,WAAWC,SAAkB;AAC3B,UAAI,KAAKA,QAAS,OAAM,IAAI/E,MAAM,sCAAsC;AACxE,WAAK+E,UAAUA;IACjB;;;;EAEA,GAAA;IAAAxH,KAAA;IAAAC,OAGA,SAAAwH,gBAAgB;AACd,WAAKD,UAAU;IACjB;EAAC,CAAA,CAAA;AAAA,EAlC0CP,IAAI;AAyCpCS,IAAAA,SAAM,SAAAC,QAAA;AAOjB,WAAAD,QAAYR,QAAWC,OAAgBC,qBAA+B;AAAAvH,oBAAA,MAAA6H,OAAA;AAAA,WAAAvE,WAAAuE,MAAAA,SAC9DR,CAAAA,QAAQC,OAAOC,wBAAwB,KAAK,CAAA;EACpD;AAAChE,YAAAsE,SAAAC,MAAA;AAAA,SAAA5H,aAAA2H,OAAA;AAAA,EAT2CT,IAAI;AAgBrCW,IAAAA,UAAO7H;;;;;;;EAUlB,SAAA6H,WAAc;AAAA/H,oBAAA,MAAA+H,QAAA;AACZ,SAAKtE,KAAK4C,OAAM;EAClB;AAAC;AAkBU2B,IAAAA,eAAY,SAAAC,UAAA;AASvB,WAAAD,cAAmB9E,MAAgBgF,SAAkC;AAAA,QAAAC;AAAA,QAAAC;AAAApI,oBAAA,MAAAgI,aAAA;AACnEI,aAAA9E,WAAA,MAAA0E,aAAA;AAAOI,WADUlF,OAAAA;AAAOkF,WAASF,UAAAA;AAEjCE,WAAK3E,KAAK4C,OAAM;AAChB+B,WAAKC,YAAQF,oBAAGD,YAAAA,QAAAA,YAAAA,SAAAA,SAAAA,QAASG,cAAQ,QAAAF,sBAAAA,SAAAA,oBAAI;AAErC,QAAI,QAAOD,YAAO,QAAPA,YAAO,SAAA,SAAPA,QAASI,aAAY,YAAaF,QAAKhI,QAAQ8H,QAAQI;AAAO,WAAAF;EAC3E;AAEA7E,YAAAyE,eAAAC,QAAA;AAAA,SAAA/H,aAAA8H,eAAA,CAAA;IAAA7H,KAAA;IAAAC,OAIA,SAAAmI,SAASnI,OAAW;AAAA,UAAAoI;AAClB,WAAKpI,QAAQA;AACb,WAAAoI,gBAAI,KAAKN,aAAO,QAAAM,kBAAZA,UAAAA,cAAcC,OAAQ,MAAKP,QAAQO,OAAOrI,KAAM;IACtD;EAAC,CAAA,CAAA;AAAA,EAxBoG2H,OAAO;AAgC9G,IAAaW,OAAI,WAAA;AA0Bf,WAAAA,MAAmBpB,OAAe;AAAAtH,oBAAA,MAAA0I,KAAA;AAjBlCzI,oBAAA,MAAA,UAG6E,CAAA,CAAE;AAC/EA,oBAAA,MAAA,WAGiF,CAAA,CAAE;AACnFA,oBAAA,MAAA,YAGqB,CAAA,CAAE;AAAA,SAMJqH,QAAAA;AACjB,SAAK7D,KAAK4C,OAAM;EAClB;AAAC,SAAAnG,aAAAwI,OAAA,CAAA;IAAAvI,KAAA;IAAAC,OAED,SAAAuI,SAAiCxI,KAAQ;AACvC,aAAOyI,OAAOC,UAAUC,eAAeC,KAAK,KAAKC,QAAQ7I,GAAG;IAC9D;EAAC,GAAA;IAAAA,KAAA;IAAAC,OAED,SAAA6I,SAAiC9I,KAAQ+I,OAA6C;AACpF,UAAI,KAAKP,SAASxI,GAAG,EAAG,OAAM,IAAIyC,MAAK,mBAAAuG,OAAoBC,OAAOjJ,GAAG,GAAC,iBAAA,CAAiB;AAEvFyI,aAAOS,eAAe,KAAKL,QAAQ7I,KAAK;QAAEC,OAAO8I;QAAOI,YAAY;QAAMC,cAAc;MAAK,CAAC;IAChG;EAAC,GAAA;IAAApJ,KAAA;IAAAC,OAED,SAAAoJ,YAAYrJ,KAAmB;AAC7B,aAAO,KAAK6I,OAAO7I,GAAG;IACxB;EAAC,GAAA;IAAAA,KAAA;IAAAC,OAED,SAAAqJ,UAAmCtJ,KAAQ;AACzC,aAAOyI,OAAOC,UAAUC,eAAeC,KAAK,KAAKW,SAASvJ,GAAG;IAC/D;EAAC,GAAA;IAAAA,KAAA;IAAAC,OAED,SAAAuJ,UAAmCxJ,KAAQyJ,QAAgD;AACzF,UAAI,KAAKH,UAAUtJ,GAAG,EAAG,OAAM,IAAIyC,MAAK,oBAAAuG,OAAqBC,OAAOjJ,GAAG,GAAC,iBAAA,CAAiB;AAEzFyI,aAAOS,eAAe,KAAKK,SAASvJ,KAAK;QAAEC,OAAOwJ;QAAQN,YAAY;QAAMC,cAAc;MAAK,CAAC;IAClG;EAAC,GAAA;IAAApJ,KAAA;IAAAC,OAED,SAAAyJ,aAAa1J,KAAoB;AAC/B,aAAO,KAAKuJ,QAAQvJ,GAAG;IACzB;EAAC,GAAA;IAAAA,KAAA;IAAAC,OAED,SAAA0J,WAAqC3J,KAAQ;AAC3C,aAAOyI,OAAOC,UAAUC,eAAeC,KAAK,KAAKgB,UAAU5J,GAAG;IAChE;EAAC,GAAA;IAAAA,KAAA;IAAAC,OAED,SAAAsH,WAAqCvH,KAAQwH,SAAsB;AACjE,UAAI,KAAKmC,WAAW3J,GAAG,EAAG,OAAM,IAAIyC,MAAK,qBAAAuG,OAAsBC,OAAOjJ,GAAG,GAAC,iBAAA,CAAiB;AAE3FyI,aAAOS,eAAe,KAAKU,UAAU5J,KAAK;QAAEC,OAAOuH;QAAS2B,YAAY;QAAMC,cAAc;MAAK,CAAC;IACpG;EAAC,GAAA;IAAApJ,KAAA;IAAAC,OAED,SAAAwH,cAAczH,KAAqB;AACjC,aAAO,KAAK4J,SAAS5J,GAAG;IAC1B;EAAC,CAAA,CAAA;AAAA,EAAA;AAOU6J,IAAAA,aAAU9J;;;;;;;;;;;;;;;;;EAwBrB,SAAA8J,YACEC,QACOC,cACPC,QACOC,aACP;AAAApK,oBAAA,MAAAgK,WAAA;AAAA,SAHOE,eAAAA;AAAqC,SAErCE,cAAAA;AAEP,QAAI,CAACH,OAAOP,QAAQQ,YAAY,GAAa;AAC3C,YAAM,IAAItH,MAAK,8CAAAuG,OAA+CC,OAAOc,YAAY,CAAC,CAAE;IACtF;AACA,QAAI,CAACC,OAAOnB,OAAOoB,WAAW,GAAa;AACzC,YAAM,IAAIxH,MAAK,6CAAAuG,OAA8CC,OAAOgB,WAAW,CAAC,CAAE;IACpF;AAEA,SAAK3G,KAAK4C,OAAM;AAChB,SAAK4D,SAASA,OAAOxG;AACrB,SAAK0G,SAASA,OAAO1G;EACvB;AAAC;;;;;;;;;;;;",
  "names": ["o", "_regeneratorRuntime", "t", "r", "e", "n", "c", "o", "i", "a", "u", "h", "f", "useHelper", "debug", "_f", "Signal", "_classCallCheck", "_defineProperty", "_createClass", "key", "value", "addPipe", "pipe", "pipes", "push", "_emit", "_asyncToGenerator", "_regeneratorRuntime", "mark", "_callee", "context", "current", "_iterator", "_step", "wrap", "_callee$", "_context", "prev", "next", "_createForOfIteratorHelper", "s", "n", "done", "sent", "abrupt", "t0", "e", "f", "finish", "stop", "emit", "_x", "apply", "arguments", "Scope", "name", "middleware", "signal", "use", "scope", "Error", "setParent", "parent", "hasParent", "Boolean", "parentScope", "type", "NodeEditor", "_Scope", "_this", "_callSuper", "_inherits", "getNode", "id", "nodes", "find", "node", "getNodes", "slice", "getConnections", "connections", "getConnection", "connection", "_addNode", "data", "addNode", "_addConnection", "_callee2", "_callee2$", "_context2", "addConnection", "_x2", "_removeNode", "_callee3", "index", "_callee3$", "_context3", "findIndex", "splice", "removeNode", "_x3", "_removeConnection", "_callee4", "_callee4$", "_context4", "removeConnection", "_x4", "_clear", "_callee5", "_iterator2", "_step2", "_callee5$", "_context5", "t1", "clear", "crypto", "globalThis", "getUID", "randomBytes", "toString", "bytes", "getRandomValues", "Uint8Array", "array", "Array", "from", "hexPairs", "map", "b", "padStart", "join", "Socket", "Port", "socket", "label", "multipleConnections", "Input", "_Port", "addControl", "control", "removeControl", "Output", "_Port2", "Control", "InputControl", "_Control", "options", "_options$readonly", "_this2", "readonly", "initial", "setValue", "_this$options", "change", "Node", "hasInput", "Object", "prototype", "hasOwnProperty", "call", "inputs", "addInput", "input", "concat", "String", "defineProperty", "enumerable", "configurable", "removeInput", "hasOutput", "outputs", "addOutput", "output", "removeOutput", "hasControl", "controls", "Connection", "source", "sourceOutput", "target", "targetInput"]
}
